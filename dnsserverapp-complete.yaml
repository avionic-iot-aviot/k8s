apiVersion: apps/v1
kind: Deployment
metadata:
  name: dnsserverapp-complete-${TENANT_ID}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dnsserverapp-complete
  template:
    metadata:
      labels:
        app: dnsserverapp-complete
    spec:
      containers:
        - name: dnsmasqcontainer
          image: andyshinn/dnsmasq:latest
          command: ["/bin/sh", "-c"]
          args:
          # keep the --listen-address in sync with the /edge -a address below
          - echo "10.11.0.1 dhcpserver.${TENANT_ID}" >> /etc/hosts;
            dnsmasq -k --bind-interfaces --listen-address=10.11.0.1 --dhcp-option=3 --dhcp-mac=set:broadtag,*:*:*:*:*:* --dhcp-broadcast=tag:broadtag --dhcp-range=edge0,10.11.0.100,10.11.0.200,5m --domain=${TENANT_ID};
          # dhcp server needs NET_ADMIN too
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          volumeMounts:
            - name: dnsmasq-shared
              mountPath: /var/lib/misc
              readOnly: false
        ### DO NOT CHANGE YOUR N2N EDGE SIDECAR, BELOW ###
        - name: n2nedgecontainer
          image: "aviot/n2nimage:latest"
          command: ["/bin/sh", "-c"]
          args:
          # notice -f at end to keep in foreground because its the only command, and NO dhcp client
          # and the fixed UDP port so that i can open it on AWS security group of the cluster's nodes
          # in order to enable P2P fast communication between nearby nodes
          - /edge -u 0 -g 0 -r -a 10.11.0.1 -c ${COM_NAME} -k ${COM_PASSWORD} -l ${SUPERNODE_URL} -p 42479 -f;
          #the following is equivalent to running the container as:
          #docker run --cap-add=NET_ADMIN --device /dev/net/tun:/dev/net/tun BLA BLA
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
          volumeMounts:
          - mountPath: "/dev/net/tun"
            name: dev-net-tun
            readOnly: true
        - name: dbapp
          image: melo/test006
          imagePullPolicy: Never
          ports:
          - containerPort: 4000
          env:
          - name: IPDB
            value: "localhost"
          - name: IPDNSSERVERAPP
            value: "localhost"
        - name: dnsserverapp
          image: melo/test007
          imagePullPolicy: Never
          ports:
          - containerPort: 3900
          env:
          - name: IPDBAPP
            value: "localhost"
          - name: IPDNSSERVER
            value: "10.11.0.1"
          volumeMounts:
            - name: dnsmasq-shared
              mountPath: /var/lib/misc
              readOnly: false
      volumes:
        - name: dnsmasq-shared
          emptyDir: {}
        - name: folder-for-mysql
          hostPath:
            path: /home/andrea/Folder_for_mySQL
        - name: mysql-init
          configMap:
            name: mysql-initdb-config
        - name: dev-net-tun
          hostPath:
            path: /dev/net/tun
---
apiVersion: v1
kind: Service
metadata:
  name: dnsserverapp-complete-${TENANT_ID}-svc
spec:
  type: NodePort
  selector:
    app: dnsserverapp-complete
  ports:
  - port: 4000
    name: dbapp
    targetPort: 4000
    nodePort: 30001
